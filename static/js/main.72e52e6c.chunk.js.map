{"version":3,"sources":["api.js","pages/blog_20200910/styles.jsx","layout/styles.jsx","layout/header/index.jsx","layout/sidebar/index.jsx","layout/index.jsx","pages/blog_20200910/index.jsx","pages/login/styles.jsx","component/auth/styles.jsx","component/auth/SignInComponent/styles.jsx","component/auth/SignInComponent/index.js","component/auth/SignUpComponent/styles.jsx","component/auth/SignUpComponent/index.js","component/auth/ConfirmSignUpComponent/styles.jsx","component/auth/ConfirmSignUpComponent/index.js","component/auth/ForgotPasswordComponent/styles.jsx","component/auth/ForgotPasswordComponent/index.js","component/auth/ConfirmForgotPasswordComponent/styles.jsx","component/auth/ConfirmForgotPasswordComponent/index.js","component/auth/ChangePasswordComponent/styles.jsx","component/auth/ChangePasswordComponent/index.js","component/auth/index.jsx","pages/login/index.jsx","Routes.jsx","Reducer.jsx","env/index.js","Redux.jsx","aws-exports.js","App.jsx","serviceWorker.js","index.jsx"],"names":["Api","require","v1Api","v1Cdn","exports","apiObject","getTest","getAxios","get","getTest2","test","test2","getUser","LoadingCallback","locale","apiName","headers","queryStringParameters","getUserDetail","listLectures","getLectureDetail","lecture_no","myInit","payLecture","payment_type","reg_lecture_state","possible_date","body","post","listFeeds","order_column","order_type","search_user_name","search_feed_division","search_feed_title","search_feed_content","createFeed","feed_type","feed_division","feed_department","feed_title","feed_content","feed_img_no","updateFeed","feed_no","put","deleteFeed","del","listFeedComments","createFeedComment","feed_comment_type","feed_comment_content","updateFeedComment","feed_comment_no","deleteFeedComment","listNotices","filter_begin_dt","filter_end_dt","next_token","createImageToNotAuth","file_path","image_type","getTag","tag_name","tag_type","createVideo","video_type","createImage","listCmsUsers","begin_dt","end_dt","user_type","updateCmsUser","user_no","user_name","mobile_no","user_division","user_department","user_verify_img_no","listCmsLectures","search_lecture_name","createCmsLecture","lecture_department","lecture_name","lecture_vimeo_url","lecture_chat_url","lecture_content","updateCmsLecture","best_bare_state","lecture_state","getCmsLecturer","updateCmsLecturer","lecturer_name","lecturer_title","lecturer_career","lecturer_introduction_img_no","listCmsNotices","createCmsNotice","notice_type","notice_state","notice_title","notice_content","updateCmsNotice","notice_no","styled","div","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","PrimarySearchAppBar","dispatch","useDispatch","reducer","useSelector","state","history","useHistory","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","console","log","push","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","clsx","drawerOpenFlag","Toolbar","type","payload","edge","hide","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","currentTarget","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","content","Sidebar","useTheme","Drawer","paper","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","Layout","children","CssBaseline","Blog","isEdit","setIsEdit","markdown","setMarkdown","mdParser","MarkdownIt","Grid","container","style","item","xs","Button","value","renderHTML","render","onChange","html","source","escapeHtml","Wrapper","SignInComponent","props","useForm","register","handleSubmit","watch","errors","loadingFunction","formState","control","trigger","toggle","isLoading","signInFuntion","data","a","userEmail","userPassword","Auth","signInProcess","authType","AuthType","EMAIL","email","password","langCode","userData","alert","CurrentAuthUiState","CONFIRM_SIGN_UP","error","message","name","ref","required","pattern","onKeyUp","window","keyCode","FORGOT_PASSWORD","SIGN_UP","SignUpComponent","userId","setUserId","setUserEmail","setUserPassword","btnSw","setBtnSw","signUpFunction","signUpProcess","cognitoRegComm","lang","useEffect","length","e","target","ConfirmSignUpComponent","userCode","setUserCode","confirmSignUpFunction","myAuth","confirmSignUpProcess","code","resendSignUpFunction","resendSignUpProcess","disabled","ForgotPasswordComponent","forgotPasswordFunction","forgotPasswordProcess","CONFIRM_FORGOT_PASSWORD","ConfirmForgotPasswordComponent","confirmForgotPasswordFunction","confirmForgotPasswordProcess","newPassword","SIGN_IN","resendForgotPasswordFunction","resendForgotPasswordProcess","ChangePasswordComponent","userOldPassword","setUserOldPassword","userNewPassword","setUserNewPassword","changePasswordFunction","changePasswordProcess","oldPassword","AuthComponent","setLoginSw","backgroundClickHandler","currentAuthUiState","src","alt","CHANGE_PASSWORD","LoginComponent","params","goBack","Login","Routes","checkAuth","currentSession","auth","isIncludeGroup","isAdmin","UserState","SIGNED","signOut","NOT_SIGN","userState","path","exact","component","to","INITIAL_STATE","baseFileServerUrl","myUser","appReducer","combineReducers","routeName","isLogin","store","createStore","awsmobile","setConfigure","Storage","App","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.72e52e6c.chunk.js","sourcesContent":["const { Api } = require(\"@psyrenpark/api\");\n// const axios = require(\"axios\");\n\n// const env = require(\"../env\");\n// var baseFileServerUrl = env.baseFileServerUrl;\n// var projectName = env.projectName;\n// var projectEnv = env.projectEnv;\n\nvar projectName = \"kl\";\nvar projectEnv = \"dev\";\n\nvar v1Api = `${projectName}-${projectEnv}-api-v1`;\nvar v1Cdn = `${projectName}-${projectEnv}-cdn-v1`;\n\nexports.apiObject = {\n  getTest: () => {\n    return Api.getAxios().get(\"https://www.google.com\");\n  },\n\n  getTest2: ({ test, test2 }) => {\n    return Api.getAxios().get(\"https://www.naver.com\");\n  },\n\n  //----------------------------------------------------\n  // api\n\n  getUser: ({ locale }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/users\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  getUserDetail: ({ locale }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/users/detail\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  listLectures: ({ locale }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/lectures\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  getLectureDetail: ({ lecture_no }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/lectures/detail\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {\n        lecture_no,\n      },\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  payLecture: (\n    {\n      lecture_no, // 테스트\n      payment_type,\n      reg_lecture_state,\n      possible_date,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/api/payment/lectures\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        lecture_no,\n        payment_type,\n        reg_lecture_state,\n        possible_date,\n      },\n    };\n    return Api.post(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] 게시판 리스트 가져오기 (인증 필요)\n   * @param {string} order_column           - 추가 예장 예시 \"createdAt\", \"updatedAt\", \"view_count\"\n   * @param {string} order_type             - \"DESC\", \"ASC\"\n   * @param {string} search_user_name       - 검색할 유저이름\n   * @param {string} search_feed_division   - 검색할 과\n   * @param {string} search_feed_title      - 검색할 제목\n   * @param {string} search_feed_content    - 검색할 내용\n   * @param {string} next_token             - 다음 토큰\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  listFeeds: (\n    {\n      order_column,\n      order_type,\n      search_user_name,\n      search_feed_division,\n      search_feed_title,\n      search_feed_content,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/api/feeds\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {\n        order_column,\n        order_type,\n        search_user_name,\n        search_feed_division,\n        search_feed_title,\n        search_feed_content,\n      },\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] 게시판 글 작성하기 (인증 필요)\n   * @param {string} feed_type              - 임시 \"IN\"\n   * @param {string} feed_division          - 과\n   * @param {string} feed_department        - 부서\n   * @param {string} feed_title             - 제목\n   * @param {string} feed_content           - 내용\n   * @param {int} feed_img_no               - 업로드후 나온 이미지 번호\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  createFeed: (\n    {\n      feed_type,\n      feed_division,\n      feed_department,\n      feed_title,\n      feed_content,\n      feed_img_no,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/api/feeds\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        feed_type,\n        feed_division,\n        feed_department,\n        feed_title,\n        feed_content,\n        feed_img_no,\n      },\n    };\n    return Api.post(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] 게시판의 게시물 중 게시글 변경 하기 (인증 필요)\n   * @param {int} feed_no                   - [필수] 게시판 글 번호\n   * @param {string} feed_type              - 임시 \"IN\"\n   * @param {string} feed_division          - 과\n   * @param {string} feed_department        - 부서\n   * @param {string} feed_title             - 제목\n   * @param {string} feed_content           - 내용\n   * @param {int} feed_img_no               - 업로드후 나온 이미지 번호\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  updateFeed: (\n    {\n      feed_no,\n      feed_type,\n      feed_division,\n      feed_department,\n      feed_title,\n      feed_content,\n      feed_img_no,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/api/feeds\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        feed_no,\n        feed_type,\n        feed_division,\n        feed_department,\n        feed_title,\n        feed_content,\n        feed_img_no,\n      },\n    };\n    return Api.put(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] 게시판의 게시물 중 게시글 삭제하기 (인증 필요)\n   * @param {int} feed_no                   - 게시판 글 번호\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  deleteFeed: ({ feed_no }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/feeds\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        feed_no,\n      },\n    };\n    return Api.del(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] 게시판 글의 댓글 리스트 가져오기 (인증 필요)\n   * @param {int} feed_no                   - [필수] 검색할 게시판 번호\n   * @param {string} order_column           - 추가 예장 예시 \"createdAt\", \"updatedAt\"\n   * @param {string} order_type             - \"DESC\", \"ASC\"\n   * @param {string} next_token             - 다음 토큰\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  listFeedComments: (\n    { feed_no, order_column, order_type },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/api/feeds/comments\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {\n        feed_no,\n        order_column,\n        order_type,\n      },\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] 게시판의 게시물 중 댓글 작성하기 (인증 필요)\n   * @param {int} feed_no                   - [필수] 게시글 번호\n   * @param {string} feed_comment_type      - 임시 \"IN\"\n   * @param {string} feed_comment_content   - 내용\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  createFeedComment: (\n    { feed_no, feed_comment_type, feed_comment_content },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/api/feeds/comments\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        feed_no,\n        feed_comment_type,\n        feed_comment_content,\n      },\n    };\n    return Api.post(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] 게시판의 게시물 중 게시글 변경 하기 (인증 필요)\n   * @param {int} feed_no                   - [필수] 게시글 번호\n   * @param {int} feed_comment_no           - [필수] 게시글 번호\n   * @param {string} feed_comment_type      - 임시 \"IN\"\n   * @param {string} feed_comment_content   - 내용\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  updateFeedComment: (\n    { feed_no, feed_comment_no, feed_comment_type, feed_comment_content },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/api/feeds/comments\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        feed_no,\n        feed_comment_no,\n        feed_comment_type,\n        feed_comment_content,\n      },\n    };\n    return Api.put(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] 게시판의 게시물 중 게시글 삭제 하기 (인증 필요)\n   * @param {int} feed_comment_no           - [필수] 게시글 번호\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  deleteFeedComment: ({ feed_comment_no }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/feeds/comments\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        feed_comment_no,\n      },\n    };\n    return Api.del(apiName, path, myInit, LoadingCallback);\n  },\n\n  //----------------------------------------------------\n  // CDN 인증 X\n\n  /**\n   * [CDN] 공지 리스트 가져오기 (인증 X)\n   * @param {string} order_column           - 추가 예장 예시 \"notice_no\". \"join_dt\", \"view_count\"\n   * @param {string} order_type             - \"DESC\", \"ASC\"\n   * @param {date} filter_begin_dt          - 필터 기간별 시작\n   * @param {date} filter_end_dt            - 필터 기간별 끝\n   * @param {string} next_token             - 다음 토큰\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  listNotices: (\n    { order_column, order_type, filter_begin_dt, filter_end_dt, next_token },\n    LoadingCallback\n  ) => {\n    var apiName = v1Cdn;\n    var path = \"/cdn/notices\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {\n        order_column,\n        order_type,\n        filter_begin_dt,\n        filter_end_dt,\n        next_token,\n      },\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [CMS] s3에 업로드후 이미지를 디비에 반영할 api (인증 없이도 사용가능)\n   * @param {string} file_path  - [필수] s3 key  \"public/images/test.png\"\n   * @param {string} image_type - [필수] 미정 (임시 \"IN\")\n   * @param {Function} LoadingCallback - 로딩 콜백\n   */\n\n  createImageToNotAuth: ({ file_path, image_type }, LoadingCallback) => {\n    var apiName = v1Cdn;\n    var path = \"/cdn/images\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        file_path,\n        image_type,\n      },\n    };\n    return Api.post(apiName, path, myInit, LoadingCallback);\n  },\n\n  //----------------------------------------------------\n  // 공통\n\n  /**\n   * [API] 태그가 있으면 데이터를 가져오고 없으면 만든후 가져오는 api (인증 팔요)\n   * @param {string} tag_name - [필수]  \"아토피\" , \"천식\"\n   * @param {string} tag_type - [필수] 미정 (임시 \"IN\")\n   * @param {Function} LoadingCallback - 로딩 콜백\n   */\n\n  getTag: ({ tag_name, tag_type }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/tags\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        tag_name,\n        tag_type,\n      },\n    };\n    return Api.post(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] s3에 업로드후 비디오 파일을 디비에 반영할 api (인증 팔요)\n   * @param {string} file_path  - [필수] s3 key  \"public/images/test.png\"\n   * @param {string} video_type - [필수] 미정 (임시 \"IN\")\n   * @param {Function} LoadingCallback - 로딩 콜백\n   */\n\n  createVideo: ({ file_path, video_type }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/videos\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        file_path,\n        video_type,\n      },\n    };\n    return Api.post(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [API] s3에 업로드후 이미지를 디비에 반영할 api (인증 팔요)\n   * @param {string} file_path  - [필수] s3 key  \"public/images/test.png\"\n   * @param {string} image_type - [필수] 미정 (임시 \"IN\")\n   * @param {Function} LoadingCallback - 로딩 콜백\n   */\n\n  createImage: ({ file_path, image_type }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/api/images\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        file_path,\n        image_type,\n      },\n    };\n    return Api.post(apiName, path, myInit, LoadingCallback);\n  },\n\n  //----------------------------------------------------\n  // cms\n\n  listCmsUsers: (\n    {\n      order_column,\n      order_type,\n      begin_dt,\n      end_dt,\n      user_type,\n      filter_begin_dt,\n      filter_end_dt,\n      next_token,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/users\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {\n        order_column,\n        order_type,\n        begin_dt,\n        end_dt,\n        user_type,\n        filter_begin_dt,\n        filter_end_dt,\n        next_token,\n      },\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  updateCmsUser: (\n    {\n      user_no, // 필수\n      user_name,\n      mobile_no,\n      user_division,\n      user_department,\n      user_verify_img_no,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/users\";\n    var myInit = {\n      // OPTIONAL\n      headers: {}, // OPTIONAL,\n      // response: true, // OPTIONAL (return the entire Axios response object instead of only response.data)\n      queryStringParameters: {},\n      body: {\n        user_no,\n        user_name,\n        mobile_no,\n        user_division,\n        user_department,\n        user_verify_img_no,\n      },\n    };\n    return Api.put(apiName, path, myInit, LoadingCallback);\n  },\n\n  listCmsLectures: (\n    {\n      order_column /**  [\"lecture_no\", \"begin_dt\", \"up_dt\"]*/,\n      order_type /**  [\"DESC\", \"ASC\"]*/,\n      search_user_name, // 검색할 강사 이름\n      search_lecture_name, // 검색할 강의 이름\n      next_token,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/lectures\";\n    var myInit = {\n      // OPTIONAL\n      headers: {}, // OPTIONAL,\n      // response: true, // OPTIONAL (return the entire Axios response object instead of only response.data)\n      queryStringParameters: {\n        order_column,\n        order_type,\n        search_user_name,\n        search_lecture_name,\n        next_token,\n      },\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  createCmsLecture: (\n    {\n      lecture_department,\n      lecture_name,\n      begin_dt,\n      end_dt,\n      lecture_vimeo_url,\n      lecture_chat_url,\n      lecture_content,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/lectures\";\n    var myInit = {\n      // OPTIONAL\n      headers: {}, // OPTIONAL,\n      // response: true, // OPTIONAL (return the entire Axios response object instead of only response.data)\n      queryStringParameters: {},\n      body: {\n        lecture_department,\n        lecture_name,\n        begin_dt,\n        end_dt,\n        lecture_vimeo_url,\n        lecture_chat_url,\n        lecture_content,\n        LoadingCallback,\n      },\n    };\n    return Api.post(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   *  cms용 강의 정보 변경 api (인증 팔요)\n   * @param {int} lecture_no                 - [필수] 강의 고유 번호\n   * @param {int} best_bare_state            - 메인 배너 상태\n   * @param {date} begin_dt                  - 강의 시작일\n   * @param {date} end_dt                    - 강의 종료일\n   * @param {string} lecture_name            - 강의 이름\n   * @param {text} lecture_content           - 강의 내용\n   * @param {string} lecture_abstract_title  - 강의 소제목\n   * @param {text} lecture_abstract_content  - 겅의 소내용\n   * @param {string} lecture_vimeo_url       - 강의 비디오 url\n   * @param {string} lecture_chat_url        - 강의 chat url\n   * @param {int} lecture_state              - 강의 상태\n   * @param {Function} LoadingCallback       - 로딩 콜백\n   */\n\n  updateCmsLecture: (\n    {\n      lecture_no, // 필수\n      best_bare_state,\n      begin_dt,\n      end_dt,\n      lecture_vimeo_url,\n      lecture_chat_url,\n      lecture_content,\n      lecture_state,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/lectures\";\n    var myInit = {\n      // OPTIONAL\n      headers: {}, // OPTIONAL,\n      // response: true, // OPTIONAL (return the entire Axios response object instead of only response.data)\n      queryStringParameters: {},\n      body: {\n        lecture_no, // 필수\n        best_bare_state,\n        begin_dt,\n        end_dt,\n        lecture_vimeo_url,\n        lecture_chat_url,\n        lecture_content,\n        lecture_state,\n      },\n    };\n    return Api.put(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [CMS] 강사 자신 정보 추가 및 변경 (인증 필요)\n   * @param {string} locale                 -\n   */\n\n  getCmsLecturer: ({ locale }, LoadingCallback) => {\n    var apiName = v1Api;\n    var path = \"/cms/lecturers\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: { locale },\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [CMS] 강사 자신 정보 추가 및 변경 (인증 필요)\n   * @param {string} lecturer_name             - 강사 이름\n   * @param {string} lecturer_title            - 강사 직책 또는 직위\n   * @param {text} lecturer_career             - 강사 이력\n   * @param {int} lecturer_introduction_img_no - 강사 소개 이미지 s3 업로드 후, 이미지 api 호출후 나오는 이미지 번호 등록\n   * @param {Function} LoadingCallback         - 로딩 콜백\n   */\n\n  updateCmsLecturer: (\n    {\n      lecturer_name,\n      lecturer_title,\n      lecturer_career,\n      lecturer_introduction_img_no,\n    },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/lecturers\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        lecturer_name,\n        lecturer_title,\n        lecturer_career,\n        lecturer_introduction_img_no,\n      },\n    };\n    return Api.put(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [CMS] 공지 리스트 가져오기 (인증 필요)\n   * @param {string} order_column           - 추가 예장 예시 \"notice_no\". \"join_dt\", \"view_count\"\n   * @param {string} order_type             - \"DESC\", \"ASC\"\n   * @param {date} filter_begin_dt          - 필터 기간별 시작\n   * @param {date} filter_end_dt            - 필터 기간별 끝\n   * @param {string} next_token             - 다음 토큰\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  listCmsNotices: (\n    { order_column, order_type, filter_begin_dt, filter_end_dt, next_token },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/notices\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {\n        order_column,\n        order_type,\n        filter_begin_dt,\n        filter_end_dt,\n        next_token,\n      },\n    };\n    return Api.get(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [CMS] 공지 생성 (인증 필요)\n   * @param {string} notice_type            - 공지 타입 미정 \"IN\"\n   * @param {int} notice_state              - 공지 상태 0은 비활성 1은 활성\n   * @param {string} notice_title           - 공지 제목\n   * @param {text} notice_content           - 공지 내용\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  createCmsNotice: (\n    { notice_type, notice_state, notice_title, notice_content },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/notices\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        notice_type,\n        notice_state,\n        notice_title,\n        notice_content,\n      },\n    };\n    return Api.put(apiName, path, myInit, LoadingCallback);\n  },\n\n  /**\n   * [CMS] 공지 변경 (인증 필요)\n   * @param {int} notice_no                 - [필수] 공지 번호\n   * @param {string} notice_type            - 공지 타입 미정 \"IN\"\n   * @param {int} notice_state              - 공지 상태 0은 비활성 1은 활성\n   * @param {string} notice_title           - 공지 제목\n   * @param {text} notice_content           - 공지 내용\n   * @param {Function} LoadingCallback      - 로딩 콜백\n   */\n\n  updateCmsNotice: (\n    { notice_no, notice_type, notice_state, notice_title, notice_content },\n    LoadingCallback\n  ) => {\n    var apiName = v1Api;\n    var path = \"/cms/notices\";\n    var myInit = {\n      headers: {},\n      queryStringParameters: {},\n      body: {\n        notice_no,\n        notice_type,\n        notice_state,\n        notice_title,\n        notice_content,\n      },\n    };\n    return Api.put(apiName, path, myInit, LoadingCallback);\n  },\n};\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-width: 1200px;\n  /* login */\n  & .login_wrap {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 9999;\n    & .modal {\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n    }\n    & .login {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      max-width: 600px;\n      width: 100%;\n      text-align: center;\n      & .login_inner {\n        padding: 56px 100px;\n        border-radius: 16px;\n        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.4);\n        background: #1a1a1a;\n        & .logo {\n          width: 280px;\n          margin: 0 auto;\n          & img {\n            width: 100%;\n          }\n        }\n        & .sign {\n          padding-top: 60px;\n          & .input_wrap {\n            padding-bottom: 10px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 20px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              background: #484848;\n              border: 2px solid #484848;\n              border-radius: 12px;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & h2 {\n              line-height: 24px;\n              padding-top: 10px;\n              text-align: left;\n              font-weight: 500;\n              color: #f00000;\n            }\n            &.on {\n              border-color: #f00000;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            line-height: 58px;\n            margin-top: 32px;\n            font-size: 20px;\n            color: #fff;\n            background: none;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border-color: #2c5dff;\n            }\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 20px;\n            color: #fff;\n            font-weight: 300;\n            & span {\n              font-weight: 500;\n              cursor: pointer;\n            }\n          }\n        }\n        & .forgot {\n          width: 100%;\n          text-align: left;\n          color: #fff;\n          & h2 {\n            line-height: 48px;\n            font-size: 32px;\n          }\n          & h3 {\n            padding-top: 40px;\n            font-size: 18px;\n          }\n          & .input_wrap {\n            padding-top: 40px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 32px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              border: 2px solid #484848;\n              border-radius: 12px;\n              background: #484848;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & p {\n              padding-top: 10px;\n            }\n            &.input_password {\n              padding: 20px 0 0 0;\n              &:last-child {\n                padding: 10px 0 0 0;\n              }\n            }\n          }\n          & .btn_send {\n            margin-top: 30px;\n            text-align: center;\n            & button {\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              color: #fff;\n              background: none;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            margin-top: 30px;\n            font-size: 16px;\n            color: #fff;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            background: none;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border: 2px solid #2c5dff;\n            }\n          }\n        }\n      }\n    }\n    & p {\n      &.text {\n        padding-top: 20px;\n        font-size: 14px;\n      }\n      &.warning {\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        color: #f00000;\n      }\n      &.forgot {\n        padding-top: 32px;\n        text-align: center !important;\n        font-size: 20px;\n        color: #fff;\n        cursor: pointer;\n      }\n      &.terms {\n        line-height: 24px;\n        padding-top: 40px;\n        font-weight: bold;\n        color: #949494;\n        & span {\n          color: #2c5dff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  /* main */\n  & .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%;\n    padding: 0 60px;\n    height: 100px;\n    & span {\n      cursor: pointer;\n    }\n    & .btn_login {\n      width: 87px;\n      height: 40px;\n      line-height: 42px;\n      text-align: center;\n      font-size: 18px;\n      color: #fff;\n      border-radius: 4px;\n      background: #2c5dff;\n      cursor: pointer;\n    }\n  }\n  & .main {\n    width: 100%;\n    height: 850px;\n    background: url(\"/images/main/main_bg.png\") no-repeat center top;\n    background-size: cover;\n    & .text {\n      text-align: center;\n      color: #fff;\n      & h2 {\n        line-height: 96px;\n        font-size: 72px;\n        font-weight: bold;\n      }\n      & .btn_now {\n        margin-top: 80px;\n        width: 888px;\n        height: 80px;\n        line-height: 80px;\n        background: #2c5dff;\n        font-size: 32px;\n        color: #fff;\n      }\n    }\n  }\n  & .section {\n    width: 100%;\n    background: #1a1a1a;\n    border-bottom: 8px solid #222;\n    & .section_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 540px;\n      margin: auto;\n      & > div {\n        height: 100%;\n        & .text_box {\n          color: #fff;\n          & h2 {\n            line-height: 80px;\n            font-size: 50px;\n            font-weight: 500;\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 28px;\n          }\n        }\n      }\n    }\n  }\n  & .footer {\n    width: 100%;\n    background: #1a1a1a;\n    & .footer_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 560px;\n      margin: 0 auto;\n      & ul {\n        padding-top: 120px;\n        & li {\n          padding-bottom: 20px;\n          color: #828282;\n          &:last-child {\n            padding-bottom: 0;\n          }\n        }\n      }\n      & p {\n        line-height: 22px;\n        padding-top: 160px;\n        color: #828282;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  & .content {\n    padding-top: 80px;\n  }\n  flex-grow: 1;\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const dispatch = useDispatch();\n  const reducer = useSelector((state) => state.reducer);\n\n  const history = useHistory();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    // setAnchorEl(event.currentTarget);\n    console.log(\"tttt\");\n    history.push(`/login`);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>프로필</MenuItem>\n      <MenuItem onClick={handleMenuClose}>계정</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  const handleDrawerOpen = () => {\n    console.log(\"1\");\n\n    dispatch({ type: \"SET_DRAWER_OPEN_FLAG\", payload: true });\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: reducer.drawerOpenFlag,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: reducer.drawerOpenFlag,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            PsyrenPark\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const reducer = useSelector((state) => state.reducer);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    dispatch({ type: \"SET_DRAWER_OPEN_FLAG\", payload: false });\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: reducer.drawerOpenFlag,\n        [classes.drawerClose]: !reducer.drawerOpenFlag,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: reducer.drawerOpenFlag,\n          [classes.drawerClose]: !reducer.drawerOpenFlag,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === \"rtl\" ? (\n            <ChevronRightIcon />\n          ) : (\n            <ChevronLeftIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nimport Wrapper from \"./styles\";\n\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport Footer from \"./footer\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 6,\n    // padding: theme.spacing(1),\n  },\n}));\n\nconst Layout = ({ children }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <Sidebar />\n      {/* <main className=\"content\">{children}</main> */}\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n\n      {/* <Footer /> */}\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n//-------------------------------------------\n// UI\nimport { Grid, Typography, Divider, Button } from \"@material-ui/core\";\nimport Wrapper from \"./styles\";\n\nimport Layout from \"../../layout\";\n// import LoadingBar from \"../../component/loadingBar\";\n// import { AuthComponent } from \"../../component/auth\";\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//-------------------------------------------\n// api\n// import { apiObject } from \"../../api\";\n// import { Auth, AuthType } from \"@psyrenpark/auth\";\n\nimport ReactMarkdown from \"react-markdown\";\n// import MarkdownEditor from \"@uiw/react-markdown-editor\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport \"react-markdown-editor-lite/lib/index.css\";\n\nconst initMd = `\n###   블로그 시작 20200910~ [3일차]\n\n#  서버 개발자의 블로그 만들기 도전\n\n1. 저의 이번달 목표는 저만의 블로그 만들기입니다.\n2. 오늘은 md파일 에디터를 적용시켜보았습니다. 작업시간 (2시간)\n  - 전의 라이브러리가 의도랑 맞지않아 심플한 버전으로 변경했습니다. \n  - 저장 가능하도록 서버 세팅중입니다.\n  - 상단의 유저 모양 누르면 로그인 창 나오도록 \n  - 로그인 기능 기초 구현 \n3. 내알은 회원 가입과 서버통신 기초를 해보도록 하겠습니다.\n4. 파이팅!!!\n\n\n###   블로그 시작 20200910~ [2일차]\n\n#  서버 개발자의 블로그 만들기 도전\n\n1. 저의 이번달 목표는 저만의 블로그 만들기입니다.\n2. 오늘은 md파일 에디터를 적용시켜보았습니다. 작업시간 (3시간)\n  - 수정버튼을 누르면 글을 작성할수 있는 에디터로 바뀝니다.\n- 아직 내용저장 기능이 없어 새로고침하면 사라집니다. 서버에 저장하도록 수정 필요\n- 글 입력이 좀 잘안되는 버그가 있습니다 수정필요\n3. 내일은 내부에 글을 쓸수있도록 디자인을 만들어 보겠습니다.\n4. 파이팅!!!\n\n\n###   블로그 시작 20200910~ [1일차]\n\n#  서버 개발자의 블로그 만들기 도전\n\n>\n블로그 시작 20200910~\n\n1. 저의 이번달 목표는 저만의 블로그 만들기입니다.\n2. 오늘은 material-ui라는 라이브러리를 사용해서 기본 레이아웃을 만들어보았습니다.(작업시간 2시간)\n3. 내일은 내부에 글을 쓸수있도록 디자인을 만들어 보겠습니다.\n4. 파이팅!!!\n`;\n\nconst Blog = () => {\n  // const markdown = `\n  //\n  // `;\n\n  const [isEdit, setIsEdit] = useState(false);\n  // const [isEdit, setIsEdit] = useState(true);\n\n  const [markdown, setMarkdown] = useState(initMd);\n\n  const mdParser = new MarkdownIt(/* Markdown-it options */);\n\n  // Finish!\n  const handleEditorChange = ({ html, text }) => {\n    console.log(\"handleEditorChange\", html, text);\n    setMarkdown(text);\n  };\n\n  // const updateMarkdown = (editor, data, value) => {\n  //   setMarkdown(value);\n  // };\n\n  return (\n    <Layout>\n      {/* <div\n      // style={{\n      //   flex: 1,\n      //   // overflow: \"visible\",\n      //   // display: \"auto\",\n      //   width: \"auto\",\n      //   // overflowY: \"hidden\",\n      //   // whiteSpace: \"nowrap\",\n      // }}\n      >\n\n      </div> */}\n\n      <Grid\n        container\n        // alignContent=\"center\"\n        // alignItems=\"center\"\n        // justify=\"center\"\n        // direction=\"column\"\n        // zeroMinWidth={false}\n        spacing={1}\n        style={{\n          // minHeight: \"500\",\n          width: \"100%\",\n          padding: 20,\n          // marginRight: ,\n        }}\n      >\n        <Grid item xs={12}>\n          <h1>블로그</h1>\n        </Grid>\n        <Grid item xs={11}></Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            onClick={(value) => {\n              setIsEdit(!isEdit);\n            }}\n          >\n            {!isEdit ? \"수정하기\" : \"수정 중\"}\n          </Button>\n        </Grid>\n\n        <Grid item xs={12}>\n          {isEdit ? (\n            // <MarkdownEditor\n            //   value={markdown}\n            //   onChange={updateMarkdown}\n            //   height=\"800\"\n            //   width=\"100%\"\n            // />\n            <MdEditor\n              style={{\n                height: \"600px\",\n                // backgroundColor: \"red\"\n              }}\n              value={markdown}\n              renderHTML={(text) => mdParser.render(text)}\n              onChange={handleEditorChange}\n              // config={{\n              //   view: {\n              //     menu: true,\n              //     md: true,\n              //     html: true,\n              //     fullScreen: true,\n              //     hideMenu: true,\n              //   },\n              //   table: {\n              //     maxRow: 5,\n              //     maxCol: 6,\n              //   },\n              //   imageUrl: \"https://octodex.github.com/images/minion.png\",\n              //   syncScrollMode: [\"leftFollowRight\", \"rightFollowLeft\"],\n              // }}\n            />\n          ) : (\n            <ReactMarkdown source={markdown} escapeHtml={false} />\n          )}\n        </Grid>\n        {/* <Grid item xs={12}>\n            <MarkdownEditor\n              value={markdown}\n              onChange={updateMarkdown}\n              height=\"500\"\n              // width=\"100\"\n            />\n          </Grid> */}\n\n        {/* <Grid item xs={12}>\n          <Typography variant=\"h1\" component=\"h2\">\n            블로그 시작 20200910~\n          </Typography>\n          <Typography\n            variant=\"h4\"\n            component=\"h4\"\n            style={{\n              padding: 10,\n              // margin: 10,\n            }}\n          >\n            서버 개발자의 블로그 만들기 도전\n          </Typography>\n\n          <Typography\n            variant=\"h6\"\n            component=\"h6\"\n            style={{\n              padding: 1,\n              // margin: 10,\n            }}\n          >\n            1. 저의 이번달 목표는 저만의 블로그 만들기입니다.\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            component=\"h6\"\n            style={{\n              padding: 1,\n              // margin: 10,\n            }}\n          >\n            2. 오늘은 material-ui라는 라이브러리를 사용해서 기본 레이아웃을\n            만들어보았습니다.(작업시간 2시간)\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            component=\"h6\"\n            style={{\n              padding: 1,\n              // margin: 10,\n            }}\n          >\n            3. 내일은 내부에 글을 쓸수있도록 디자인을 만들어 보겠습니다.\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            component=\"h6\"\n            style={{\n              padding: 1,\n              // margin: 10,\n            }}\n          >\n            4. 파이팅!!!\n          </Typography>\n          <img\n            src=\"/resources/blog_20200910/habit.png\"\n            alt=\"\"\n            styles={{\n              height: \"100%\",\n              width: \"100%\",\n              padding: 10,\n            }}\n          />\n        </Grid> */}\n\n        {/* <img\n          src=\"/resources/blog_20200910/habit.png\"\n          alt=\"\"\n          styles={{\n            height: \"100%\",\n            width: \"100%\",\n            padding: 10,\n          }}\n        /> */}\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default Blog;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  background: url(\"/images/car_bg.jpg\") no-repeat center center;\n  background-size: cover;\n  & .login_wrap {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    max-width: 520px;\n    width: 100%;\n    padding: 80px 60px 40px;\n    border: solid 1px #707070;\n    background: #fff;\n    box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n    & .logo {\n      padding-bottom: 80px;\n      text-align: center;\n    }\n    & .input_wrap {\n      position: relative;\n      margin-bottom: 20px;\n      & input {\n        width: 100%;\n        height: 56px;\n        padding: 0 30px 0 80px;\n        font-size: 16px;\n        border: 1px solid #9b9b9b;\n        border-radius: 56px;\n        &::placeholder {\n          color: #ccc;\n        }\n      }\n      &::before {\n        content: \"\";\n        position: absolute;\n        left: 20px;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 40px;\n        height: 40px;\n        background: url(\"/images/id_icon.png\") no-repeat;\n      }\n      &.password {\n        margin-bottom: 0;\n        &::before {\n          background: url(\"/images/password_icon.png\") no-repeat;\n        }\n      }\n    }\n    & .util {\n      padding: 24px 0;\n      & > span {\n        vertical-align: middle;\n        &.icon {\n          & > span {\n            padding: 0;\n            color: #459bfe;\n          }\n        }\n        &.text {\n          margin-left: 8px;\n          font-size: 14px;\n          color: #484848;\n        }\n      }\n    }\n    & .btn_login {\n      & button {\n        width: 100%;\n        height: 72px;\n        color: #fff;\n        font-size: 24px;\n        font-weight: 500;\n        border-radius: 72px;\n        background: #459bfe;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-width: 1200px;\n  /* login */\n  & .login_wrap {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 9999;\n    & .modal {\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n    }\n    & .login {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      max-width: 600px;\n      width: 100%;\n      text-align: center;\n      & .login_inner {\n        padding: 56px 100px;\n        border-radius: 16px;\n        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.4);\n        background: #1a1a1a;\n        & .logo {\n          width: 280px;\n          margin: 0 auto;\n          & img {\n            width: 100%;\n          }\n        }\n        & .sign {\n          padding-top: 60px;\n          & .input_wrap {\n            padding-bottom: 10px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 20px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              background: #484848;\n              border: 2px solid #484848;\n              border-radius: 12px;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & h2 {\n              line-height: 24px;\n              padding-top: 10px;\n              text-align: left;\n              font-weight: 500;\n              color: #f00000;\n            }\n            &.on {\n              border-color: #f00000;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            line-height: 58px;\n            margin-top: 32px;\n            font-size: 20px;\n            color: #fff;\n            background: none;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border-color: #2c5dff;\n            }\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 20px;\n            color: #fff;\n            font-weight: 300;\n            & span {\n              font-weight: 500;\n              cursor: pointer;\n            }\n          }\n        }\n        & .forgot {\n          width: 100%;\n          text-align: left;\n          color: #fff;\n          & h2 {\n            line-height: 48px;\n            font-size: 32px;\n          }\n          & h3 {\n            padding-top: 40px;\n            font-size: 18px;\n          }\n          & .input_wrap {\n            padding-top: 40px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 32px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              border: 2px solid #484848;\n              border-radius: 12px;\n              background: #484848;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & p {\n              padding-top: 10px;\n            }\n            &.input_password {\n              padding: 20px 0 0 0;\n              &:last-child {\n                padding: 10px 0 0 0;\n              }\n            }\n          }\n          & .btn_send {\n            margin-top: 30px;\n            text-align: center;\n            & button {\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              color: #fff;\n              background: none;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            margin-top: 30px;\n            font-size: 16px;\n            color: #fff;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            background: none;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border: 2px solid #2c5dff;\n            }\n          }\n        }\n      }\n    }\n    & p {\n      &.text {\n        padding-top: 20px;\n        font-size: 14px;\n      }\n      &.warning {\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        color: #f00000;\n      }\n      &.forgot {\n        padding-top: 32px;\n        text-align: center !important;\n        font-size: 20px;\n        color: #fff;\n        cursor: pointer;\n      }\n      &.terms {\n        line-height: 24px;\n        padding-top: 40px;\n        font-weight: bold;\n        color: #949494;\n        & span {\n          color: #2c5dff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  /* main */\n  & .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%;\n    padding: 0 60px;\n    height: 100px;\n    & span {\n      cursor: pointer;\n    }\n    & .btn_login {\n      width: 87px;\n      height: 40px;\n      line-height: 42px;\n      text-align: center;\n      font-size: 18px;\n      color: #fff;\n      border-radius: 4px;\n      background: #2c5dff;\n      cursor: pointer;\n    }\n  }\n  & .main {\n    width: 100%;\n    height: 850px;\n    background: url(\"/images/main/main_bg.png\") no-repeat center top;\n    background-size: cover;\n    & .text {\n      text-align: center;\n      color: #fff;\n      & h2 {\n        line-height: 96px;\n        font-size: 72px;\n        font-weight: bold;\n      }\n      & .btn_now {\n        margin-top: 80px;\n        width: 888px;\n        height: 80px;\n        line-height: 80px;\n        background: #2c5dff;\n        font-size: 32px;\n        color: #fff;\n      }\n    }\n  }\n  & .section {\n    width: 100%;\n    background: #1a1a1a;\n    border-bottom: 8px solid #222;\n    & .section_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 540px;\n      margin: auto;\n      & > div {\n        height: 100%;\n        & .text_box {\n          color: #fff;\n          & h2 {\n            line-height: 80px;\n            font-size: 50px;\n            font-weight: 500;\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 28px;\n          }\n        }\n      }\n    }\n  }\n  & .footer {\n    width: 100%;\n    background: #1a1a1a;\n    & .footer_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 560px;\n      margin: 0 auto;\n      & ul {\n        padding-top: 120px;\n        & li {\n          padding-bottom: 20px;\n          color: #828282;\n          &:last-child {\n            padding-bottom: 0;\n          }\n        }\n      }\n      & p {\n        line-height: 22px;\n        padding-top: 160px;\n        color: #828282;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-width: 1200px;\n  /* login */\n  & .login_wrap {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 9999;\n    & .modal {\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n    }\n    & .login {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      max-width: 600px;\n      width: 100%;\n      text-align: center;\n      & .login_inner {\n        padding: 56px 100px;\n        border-radius: 16px;\n        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.4);\n        background: #1a1a1a;\n        & .logo {\n          width: 280px;\n          margin: 0 auto;\n          & img {\n            width: 100%;\n          }\n        }\n        & .sign {\n          padding-top: 60px;\n          & .input_wrap {\n            padding-bottom: 10px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 20px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              background: #484848;\n              border: 2px solid #484848;\n              border-radius: 12px;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & h2 {\n              line-height: 24px;\n              padding-top: 10px;\n              text-align: left;\n              font-weight: 500;\n              color: #f00000;\n            }\n            &.on {\n              border-color: #f00000;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            line-height: 58px;\n            margin-top: 32px;\n            font-size: 20px;\n            color: #fff;\n            background: none;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border-color: #2c5dff;\n            }\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 20px;\n            color: #fff;\n            font-weight: 300;\n            & span {\n              font-weight: 500;\n              cursor: pointer;\n            }\n          }\n        }\n        & .forgot {\n          width: 100%;\n          text-align: left;\n          color: #fff;\n          & h2 {\n            line-height: 48px;\n            font-size: 32px;\n          }\n          & h3 {\n            padding-top: 40px;\n            font-size: 18px;\n          }\n          & .input_wrap {\n            padding-top: 40px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 32px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              border: 2px solid #484848;\n              border-radius: 12px;\n              background: #484848;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & p {\n              padding-top: 10px;\n            }\n            &.input_password {\n              padding: 20px 0 0 0;\n              &:last-child {\n                padding: 10px 0 0 0;\n              }\n            }\n          }\n          & .btn_send {\n            margin-top: 30px;\n            text-align: center;\n            & button {\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              color: #fff;\n              background: none;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            margin-top: 30px;\n            font-size: 16px;\n            color: #fff;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            background: none;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border: 2px solid #2c5dff;\n            }\n          }\n        }\n      }\n    }\n    & p {\n      &.text {\n        padding-top: 20px;\n        font-size: 14px;\n      }\n      &.warning {\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        color: #f00000;\n      }\n      &.forgot {\n        padding-top: 32px;\n        text-align: center !important;\n        font-size: 20px;\n        color: #fff;\n        cursor: pointer;\n      }\n      &.terms {\n        line-height: 24px;\n        padding-top: 40px;\n        font-weight: bold;\n        color: #949494;\n        & span {\n          color: #2c5dff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  /* main */\n  & .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%;\n    padding: 0 60px;\n    height: 100px;\n    & span {\n      cursor: pointer;\n    }\n    & .btn_login {\n      width: 87px;\n      height: 40px;\n      line-height: 42px;\n      text-align: center;\n      font-size: 18px;\n      color: #fff;\n      border-radius: 4px;\n      background: #2c5dff;\n      cursor: pointer;\n    }\n  }\n  & .main {\n    width: 100%;\n    height: 850px;\n    background: url(\"/images/main/main_bg.png\") no-repeat center top;\n    background-size: cover;\n    & .text {\n      text-align: center;\n      color: #fff;\n      & h2 {\n        line-height: 96px;\n        font-size: 72px;\n        font-weight: bold;\n      }\n      & .btn_now {\n        margin-top: 80px;\n        width: 888px;\n        height: 80px;\n        line-height: 80px;\n        background: #2c5dff;\n        font-size: 32px;\n        color: #fff;\n      }\n    }\n  }\n  & .section {\n    width: 100%;\n    background: #1a1a1a;\n    border-bottom: 8px solid #222;\n    & .section_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 540px;\n      margin: auto;\n      & > div {\n        height: 100%;\n        & .text_box {\n          color: #fff;\n          & h2 {\n            line-height: 80px;\n            font-size: 50px;\n            font-weight: 500;\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 28px;\n          }\n        }\n      }\n    }\n  }\n  & .footer {\n    width: 100%;\n    background: #1a1a1a;\n    & .footer_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 560px;\n      margin: 0 auto;\n      & ul {\n        padding-top: 120px;\n        & li {\n          padding-bottom: 20px;\n          color: #828282;\n          &:last-child {\n            padding-bottom: 0;\n          }\n        }\n      }\n      & p {\n        line-height: 22px;\n        padding-top: 160px;\n        color: #828282;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React, { useState, useEffect, useContext } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\nimport { Grid, Checkbox } from \"@material-ui/core\";\nimport MaterialUIInput from \"@material-ui/core/Input\";\nimport Wrapper from \"./styles\";\n\nimport { apiObject } from \"../../../api\";\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//--------------------------------------------------\n// redux\nimport {\n  Auth,\n  CurrentAuthUiState,\n  AuthType,\n  UserState,\n} from \"@psyrenpark/auth\";\n\n//--------------------------------------------------\n// hook\nimport { useForm, useWatch, Controller } from \"react-hook-form\";\n\n//--------------------------------------------------\n\nexport const SignInComponent = (props) => {\n  const reducer = useSelector((state) => state.reducer);\n  const dispatch = useDispatch();\n  // const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    formState,\n    control,\n    trigger,\n  } = useForm();\n\n  const { toggle } = watch();\n\n  const loadingFunction = (isLoading) => {\n    // 로딩처리\n    dispatch({ type: \"SET_IS_LOADING\", payload: isLoading });\n  };\n\n  const signInFuntion = async (data) => {\n    console.log(\"signInFuntion -> data\", data);\n\n    var userEmail = data.userEmail;\n    var userPassword = data.userPassword;\n\n    Auth.signInProcess(\n      {\n        authType: AuthType.EMAIL,\n        email: userEmail,\n        password: userPassword,\n      },\n      async (data) => {\n        // 성공처리\n        console.log(\"signInFuntion -> data\", data);\n        // dispatch({ type: \"SET_CURRENT_AUTH_UI_STATE\", payload: isLoading });\n        // // 유저 정보 가져오기\n\n        try {\n          var userData = await apiObject.getUser({\n            langCode: \"ko\",\n            loadingFunction,\n          });\n          console.log(\"signInFuntion -> userData\", userData);\n          // console.log(\"signInFuntion -> userData\", JSON.stringify(userData.list));\n          // console.log(\"signInFuntion -> userData\", userData.list[0]);\n\n          dispatch({\n            type: \"SIGN_IN\",\n            payload: userData,\n          });\n        } catch (error) {\n          alert(error);\n        }\n      },\n      (data) => {\n        console.log(\"signInFuntion -> error\", data);\n\n        dispatch({\n          type: \"SET_MY_AUTH\",\n          payload: {\n            authType: AuthType.EMAIL,\n            email: userEmail,\n            password: userPassword,\n          },\n        });\n\n        dispatch({\n          type: \"SET_CURRENT_AUTH_UI_STATE\",\n          payload: CurrentAuthUiState.CONFIRM_SIGN_UP,\n        });\n      },\n      (error) => {\n        // 실패처리,\n        console.log(\"signInFuntion -> error\", error);\n        alert(error.message);\n      },\n      loadingFunction\n    );\n  };\n\n  const changeSignUpUiFunction = () => {\n    dispatch({\n      type: \"SET_CURRENT_AUTH_UI_STATE\",\n      payload: CurrentAuthUiState.SIGN_UP,\n    });\n  };\n\n  return (\n    <Grid className=\"sign_in sign\">\n      <Grid className=\"input_wrap\">\n        <input\n          name=\"userEmail\"\n          ref={register({\n            required: true,\n            pattern: /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z0-9\\-]+/,\n          })}\n          type=\"text\"\n          placeholder=\"이메일 주소\"\n        />\n      </Grid>\n      {/* {watch(\"userEmail\", false) === true && (\n        <p className=\"warning\">email 정보가 올바르지 않습니다.</p>\n      )} */}\n\n      {errors?.userEmail && (\n        <p className=\"warning\">email 정보가 올바르지 않습니다.</p>\n      )}\n      <Grid className=\"input_wrap\">\n        <input\n          name=\"userPassword\"\n          ref={register({\n            required: true,\n            pattern: /(?=.*\\d{1,50})(?=.*[~`!@#$%\\^&*()-+=]{1,50})(?=.*[a-zA-Z]{2,50}).{8,50}$/,\n          })}\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          onKeyUp={() => {\n            if (window.event.keyCode === 13) {\n              handleSubmit(signInFuntion);\n            }\n          }}\n        />\n      </Grid>\n      {errors.userPassword && (\n        <p className=\"warning\">password 정보가 올바르지 않습니다.</p>\n      )}\n\n      {/* <Grid\n              className=\"check_box\"\n              onClick={() => {\n                setCheckSw(!checkSw);\n              }}\n            >\n              {checkSw ? (\n                <img src=\"/images/icon/check_on_icon.png\" alt=\"\" />\n              ) : (\n                <img src=\"/images/icon/check_off_icon.png\" alt=\"\" />\n              )}\n            </Grid> */}\n\n      {/* <Controller\n        as={\n          <Checkbox\n            color=\"secondary\"\n            size=\"small\"\n            inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n          />\n        }\n        name=\"firstName\"\n        rules={{ required: true }}\n        control={control}\n        defaultValue=\"\"\n      />\n\n      <input\n        styles={{}}\n        type=\"checkbox\"\n        name=\"toggle\"\n        ref={register({\n          required: true,\n        })}\n      />\n\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <Checkbox\n            color=\"secondary\"\n            size=\"small\"\n            inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n            // checked={value ? true : false}\n            // onChange={(value) => {\n            //   console.log(value.target);\n            //   onChange(value ? true : false);\n            // }}\n          />\n        )}\n        name=\"firstName\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      /> */}\n\n      <p\n        className=\"forgot\"\n        onClick={() => {\n          dispatch({\n            type: \"SET_CURRENT_AUTH_UI_STATE\",\n            payload: CurrentAuthUiState.FORGOT_PASSWORD,\n          });\n        }}\n      >\n        비밀번호를 잊으셨나요?\n      </p>\n\n      {/* {toggle && (\n        <button\n          type=\"button\"\n          className={\n            watch(\"userEmail\", false) && watch(\"userPassword\", false)\n              ? \"btn_move on\"\n              : \"btn_move\"\n          }\n          // className={\"btn_move\"}\n          onClick={handleSubmit(signInFuntion)}\n        >\n          다음\n        </button>\n      )} */}\n\n      <button\n        type=\"button\"\n        className={\n          watch(\"userEmail\", false) && watch(\"userPassword\", false)\n            ? \"btn_move on\"\n            : \"btn_move\"\n        }\n        // className={\"btn_move\"}\n        onClick={handleSubmit(signInFuntion)}\n      >\n        다음\n      </button>\n\n      <p className=\"terms\">\n        회원가입을 하시거나 로그인을 하시면, 저희의 <span>약관</span>과<br />\n        <span>개인정보처리방침</span>에 동의하는 것으로 간주됩니다.\n      </p>\n      <h3>\n        처음이신가요?\n        <span onClick={changeSignUpUiFunction}>&nbsp;회원가입하기</span>\n      </h3>\n    </Grid>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-width: 1200px;\n  /* login */\n  & .login_wrap {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 9999;\n    & .modal {\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n    }\n    & .login {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      max-width: 600px;\n      width: 100%;\n      text-align: center;\n      & .login_inner {\n        padding: 56px 100px;\n        border-radius: 16px;\n        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.4);\n        background: #1a1a1a;\n        & .logo {\n          width: 280px;\n          margin: 0 auto;\n          & img {\n            width: 100%;\n          }\n        }\n        & .sign {\n          padding-top: 60px;\n          & .input_wrap {\n            padding-bottom: 10px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 20px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              background: #484848;\n              border: 2px solid #484848;\n              border-radius: 12px;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & h2 {\n              line-height: 24px;\n              padding-top: 10px;\n              text-align: left;\n              font-weight: 500;\n              color: #f00000;\n            }\n            &.on {\n              border-color: #f00000;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            line-height: 58px;\n            margin-top: 32px;\n            font-size: 20px;\n            color: #fff;\n            background: none;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border-color: #2c5dff;\n            }\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 20px;\n            color: #fff;\n            font-weight: 300;\n            & span {\n              font-weight: 500;\n              cursor: pointer;\n            }\n          }\n        }\n        & .forgot {\n          width: 100%;\n          text-align: left;\n          color: #fff;\n          & h2 {\n            line-height: 48px;\n            font-size: 32px;\n          }\n          & h3 {\n            padding-top: 40px;\n            font-size: 18px;\n          }\n          & .input_wrap {\n            padding-top: 40px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 32px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              border: 2px solid #484848;\n              border-radius: 12px;\n              background: #484848;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & p {\n              padding-top: 10px;\n            }\n            &.input_password {\n              padding: 20px 0 0 0;\n              &:last-child {\n                padding: 10px 0 0 0;\n              }\n            }\n          }\n          & .btn_send {\n            margin-top: 30px;\n            text-align: center;\n            & button {\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              color: #fff;\n              background: none;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            margin-top: 30px;\n            font-size: 16px;\n            color: #fff;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            background: none;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border: 2px solid #2c5dff;\n            }\n          }\n        }\n      }\n    }\n    & p {\n      &.text {\n        padding-top: 20px;\n        font-size: 14px;\n      }\n      &.warning {\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        color: #f00000;\n      }\n      &.forgot {\n        padding-top: 32px;\n        text-align: center !important;\n        font-size: 20px;\n        color: #fff;\n        cursor: pointer;\n      }\n      &.terms {\n        line-height: 24px;\n        padding-top: 40px;\n        font-weight: bold;\n        color: #949494;\n        & span {\n          color: #2c5dff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  /* main */\n  & .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%;\n    padding: 0 60px;\n    height: 100px;\n    & span {\n      cursor: pointer;\n    }\n    & .btn_login {\n      width: 87px;\n      height: 40px;\n      line-height: 42px;\n      text-align: center;\n      font-size: 18px;\n      color: #fff;\n      border-radius: 4px;\n      background: #2c5dff;\n      cursor: pointer;\n    }\n  }\n  & .main {\n    width: 100%;\n    height: 850px;\n    background: url(\"/images/main/main_bg.png\") no-repeat center top;\n    background-size: cover;\n    & .text {\n      text-align: center;\n      color: #fff;\n      & h2 {\n        line-height: 96px;\n        font-size: 72px;\n        font-weight: bold;\n      }\n      & .btn_now {\n        margin-top: 80px;\n        width: 888px;\n        height: 80px;\n        line-height: 80px;\n        background: #2c5dff;\n        font-size: 32px;\n        color: #fff;\n      }\n    }\n  }\n  & .section {\n    width: 100%;\n    background: #1a1a1a;\n    border-bottom: 8px solid #222;\n    & .section_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 540px;\n      margin: auto;\n      & > div {\n        height: 100%;\n        & .text_box {\n          color: #fff;\n          & h2 {\n            line-height: 80px;\n            font-size: 50px;\n            font-weight: 500;\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 28px;\n          }\n        }\n      }\n    }\n  }\n  & .footer {\n    width: 100%;\n    background: #1a1a1a;\n    & .footer_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 560px;\n      margin: 0 auto;\n      & ul {\n        padding-top: 120px;\n        & li {\n          padding-bottom: 20px;\n          color: #828282;\n          &:last-child {\n            padding-bottom: 0;\n          }\n        }\n      }\n      & p {\n        line-height: 22px;\n        padding-top: 160px;\n        color: #828282;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React, { useState, useEffect, useContext } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\nimport { Grid } from \"@material-ui/core\";\nimport Wrapper from \"./styles\";\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//--------------------------------------------------\n// redux\nimport { Auth, AuthType, CurrentAuthUiState } from \"@psyrenpark/auth\";\n//--------------------------------------------------\n//\n\nexport const SignUpComponent = (props) => {\n  const reducer = useSelector((state) => state.reducer);\n  const dispatch = useDispatch();\n\n  const [userId, setUserId] = useState(\"\");\n  const userIdChange = (e) => {\n    setUserId(e.target.value);\n  };\n  const [userEmail, setUserEmail] = useState(\"\");\n  const userEmailChange = (e) => {\n    setUserEmail(e.target.value);\n  };\n  const [userPassword, setUserPassword] = useState(\"\");\n  const userPasswordChange = (e) => {\n    setUserPassword(e.target.value);\n  };\n\n  const [btnSw, setBtnSw] = useState(false);\n\n  const signUpFunction = async () => {\n    Auth.signUpProcess(\n      {\n        email: userEmail,\n        password: userPassword,\n        authType: AuthType.EMAIL,\n        cognitoRegComm: {\n          user_name: \"이름\",\n          user_type: \"D\", // S , D,  N\n          user_division: \"고려대\",\n          user_department: \"수의학과\",\n          mobile_no: \"01000001112\",\n          user_verify_img_no: \"2\",\n        },\n        lang: \"en\",\n      },\n      (data) => {\n        // 성공처리\n        console.log(\"loginFunctionTest -> data\", data);\n\n        dispatch({\n          type: \"SET_MY_AUTH\",\n          payload: {\n            authType: AuthType.EMAIL,\n            email: userEmail,\n            password: userPassword,\n          },\n        });\n\n        dispatch({\n          type: \"SET_CURRENT_AUTH_UI_STATE\",\n          payload: CurrentAuthUiState.CONFIRM_SIGN_UP,\n        });\n\n        // // 유저 정보 가져오기\n        //   history.push(\"/movie\");\n      },\n      (error) => {\n        // 실패처리,\n        console.log(\"loginFunctionTest -> error\", error);\n        alert(error.message);\n      },\n      (isLoading) => {\n        // 로딩처리\n        dispatch({ type: \"SET_IS_LOADING\", payload: isLoading });\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (userId.length > 0 && userEmail.length > 0 && userPassword.length > 7) {\n      setBtnSw(true);\n    } else {\n      setBtnSw(false);\n    }\n  }, [userId, userEmail, userPassword]);\n\n  return (\n    <Grid className=\"sign_up sign\">\n      <Grid className=\"input_wrap\">\n        <input\n          type=\"text\"\n          placeholder=\"아이디\"\n          value={userId}\n          onChange={userIdChange}\n        />\n        {/* <h2>이미 사용 중인 아이디입니다.</h2> */}\n      </Grid>\n      <Grid className=\"input_wrap\">\n        <input\n          type=\"text\"\n          placeholder=\"이메일 주소\"\n          value={userEmail}\n          onChange={userEmailChange}\n        />\n        {/* <h2>올바르지 않은 이메일 주소 형식입니다.</h2> */}\n      </Grid>\n      <Grid className=\"input_wrap\">\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호(8자리 이상의 숫자, 알파벳, 특수문자)\"\n          value={userPassword}\n          onChange={userPasswordChange}\n        />\n        {/* <h2>\n              비밀번호는 8자리 이상이며, 문자, 숫자와 특수문자를 포함할 수 있습니다.\n            </h2> */}\n      </Grid>\n      <button\n        type=\"button\"\n        className={btnSw ? \"btn_move on\" : \"btn_move\"}\n        onClick={() => {\n          if (btnSw) {\n            signUpFunction();\n          }\n        }}\n      >\n        다음\n      </button>\n      <p className=\"terms\">\n        회원가입을 하시거나 로그인을 하시면, 저희의 <span>약관</span>과<br />\n        <span>개인정보처리방침</span>에 동의하는 것으로 간주됩니다.\n      </p>\n      <h3>\n        이미 회원이신가요?\n        <span\n          onClick={() => {\n            // setLoginState(\"signIn\");\n          }}\n        >\n          &nbsp;로그인하기\n        </span>\n      </h3>\n    </Grid>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-width: 1200px;\n  /* login */\n  & .login_wrap {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 9999;\n    & .modal {\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n    }\n    & .login {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      max-width: 600px;\n      width: 100%;\n      text-align: center;\n      & .login_inner {\n        padding: 56px 100px;\n        border-radius: 16px;\n        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.4);\n        background: #1a1a1a;\n        & .logo {\n          width: 280px;\n          margin: 0 auto;\n          & img {\n            width: 100%;\n          }\n        }\n        & .sign {\n          padding-top: 60px;\n          & .input_wrap {\n            padding-bottom: 10px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 20px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              background: #484848;\n              border: 2px solid #484848;\n              border-radius: 12px;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & h2 {\n              line-height: 24px;\n              padding-top: 10px;\n              text-align: left;\n              font-weight: 500;\n              color: #f00000;\n            }\n            &.on {\n              border-color: #f00000;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            line-height: 58px;\n            margin-top: 32px;\n            font-size: 20px;\n            color: #fff;\n            background: none;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border-color: #2c5dff;\n            }\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 20px;\n            color: #fff;\n            font-weight: 300;\n            & span {\n              font-weight: 500;\n              cursor: pointer;\n            }\n          }\n        }\n        & .forgot {\n          width: 100%;\n          text-align: left;\n          color: #fff;\n          & h2 {\n            line-height: 48px;\n            font-size: 32px;\n          }\n          & h3 {\n            padding-top: 40px;\n            font-size: 18px;\n          }\n          & .input_wrap {\n            padding-top: 40px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 32px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              border: 2px solid #484848;\n              border-radius: 12px;\n              background: #484848;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & p {\n              padding-top: 10px;\n            }\n            &.input_password {\n              padding: 20px 0 0 0;\n              &:last-child {\n                padding: 10px 0 0 0;\n              }\n            }\n          }\n          & .btn_send {\n            margin-top: 30px;\n            text-align: center;\n            & button {\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              color: #fff;\n              background: none;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            margin-top: 30px;\n            font-size: 16px;\n            color: #fff;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            background: none;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border: 2px solid #2c5dff;\n            }\n          }\n        }\n      }\n    }\n    & p {\n      &.text {\n        padding-top: 20px;\n        font-size: 14px;\n      }\n      &.warning {\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        color: #f00000;\n      }\n      &.forgot {\n        padding-top: 32px;\n        text-align: center !important;\n        font-size: 20px;\n        color: #fff;\n        cursor: pointer;\n      }\n      &.terms {\n        line-height: 24px;\n        padding-top: 40px;\n        font-weight: bold;\n        color: #949494;\n        & span {\n          color: #2c5dff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  /* main */\n  & .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%;\n    padding: 0 60px;\n    height: 100px;\n    & span {\n      cursor: pointer;\n    }\n    & .btn_login {\n      width: 87px;\n      height: 40px;\n      line-height: 42px;\n      text-align: center;\n      font-size: 18px;\n      color: #fff;\n      border-radius: 4px;\n      background: #2c5dff;\n      cursor: pointer;\n    }\n  }\n  & .main {\n    width: 100%;\n    height: 850px;\n    background: url(\"/images/main/main_bg.png\") no-repeat center top;\n    background-size: cover;\n    & .text {\n      text-align: center;\n      color: #fff;\n      & h2 {\n        line-height: 96px;\n        font-size: 72px;\n        font-weight: bold;\n      }\n      & .btn_now {\n        margin-top: 80px;\n        width: 888px;\n        height: 80px;\n        line-height: 80px;\n        background: #2c5dff;\n        font-size: 32px;\n        color: #fff;\n      }\n    }\n  }\n  & .section {\n    width: 100%;\n    background: #1a1a1a;\n    border-bottom: 8px solid #222;\n    & .section_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 540px;\n      margin: auto;\n      & > div {\n        height: 100%;\n        & .text_box {\n          color: #fff;\n          & h2 {\n            line-height: 80px;\n            font-size: 50px;\n            font-weight: 500;\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 28px;\n          }\n        }\n      }\n    }\n  }\n  & .footer {\n    width: 100%;\n    background: #1a1a1a;\n    & .footer_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 560px;\n      margin: 0 auto;\n      & ul {\n        padding-top: 120px;\n        & li {\n          padding-bottom: 20px;\n          color: #828282;\n          &:last-child {\n            padding-bottom: 0;\n          }\n        }\n      }\n      & p {\n        line-height: 22px;\n        padding-top: 160px;\n        color: #828282;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React, { useState, useEffect, useContext } from 'react';\n// import { useHistory } from \"react-router-dom\";\n\nimport { Grid } from '@material-ui/core';\nimport Wrapper from './styles';\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n//--------------------------------------------------\n// redux\nimport { Auth, AuthType } from '@psyrenpark/auth';\n//--------------------------------------------------\n//\n\nexport const ConfirmSignUpComponent = props => {\n  const reducer = useSelector(state => state.reducer);\n  const dispatch = useDispatch();\n\n  const [userCode, setUserCode] = useState('');\n  const codeChange = e => {\n    setUserCode(e.target.value);\n  };\n\n  const [btnSw, setBtnSw] = useState(false);\n\n  const confirmSignUpFunction = async () => {\n    if (!reducer.myAuth.email || !reducer.myAuth.password || !reducer.myAuth.authType) {\n      alert('null');\n    }\n    Auth.confirmSignUpProcess(\n      {\n        email: reducer.myAuth.email,\n        password: reducer.myAuth.password,\n        authType: reducer.myAuth.authType,\n        code: userCode,\n      },\n      data => {\n        // 성공처리\n        console.log('loginFunctionTest -> data', data);\n      },\n      error => {\n        // 실패처리,\n        console.log('loginFunctionTest -> error', error);\n        alert(error.message);\n      },\n      isLoading => {\n        // 로딩처리\n        dispatch({ type: 'SET_IS_LOADING', payload: isLoading });\n      },\n    );\n  };\n\n  const resendSignUpFunction = async () => {\n    if (!reducer.myAuth.email || !reducer.myAuth.password || !reducer.myAuth.authType) {\n      alert('null');\n    }\n    Auth.resendSignUpProcess(\n      {\n        email: reducer.myAuth.email,\n      },\n      data => {\n        // 성공처리\n        console.log('loginFunctionTest -> data', data);\n      },\n      error => {\n        // 실패처리,\n        console.log('loginFunctionTest -> error', error);\n        alert(error.message);\n      },\n      isLoading => {\n        // 로딩처리\n        dispatch({ type: 'SET_IS_LOADING', payload: isLoading });\n      },\n    );\n  };\n\n  useEffect(() => {\n    if (userCode.length > 5) {\n      setBtnSw(true);\n    } else {\n      setBtnSw(false);\n    }\n  }, [userCode]);\n\n  return (\n    <Grid className=\"sign_up sign\">\n      <Grid className=\"input_wrap\">\n        <input type=\"text\" placeholder=\"이메일 주소\" value={reducer.myAuth.email} disabled />\n        {/* <h2>올바르지 않은 이메일 주소 형식입니다.</h2> */}\n      </Grid>\n      <Grid className=\"input_wrap\">\n        <input type=\"code\" placeholder=\"인증코드\" value={userCode} onChange={codeChange} />\n        {/* <h2>\n              비밀번호는 8자리 이상이며, 문자, 숫자와 특수문자를 포함할 수 있습니다.\n            </h2> */}\n      </Grid>\n      <button\n        type=\"button\"\n        className={btnSw ? 'btn_move on' : 'btn_move'}\n        onClick={() => {\n          if (btnSw) {\n            confirmSignUpFunction();\n          }\n        }}\n      >\n        확인\n      </button>\n      <p className=\"terms\">\n        회원가입을 하시거나 로그인을 하시면, 저희의 <span>약관</span>과<br />\n        <span>개인정보처리방침</span>에 동의하는 것으로 간주됩니다.\n      </p>\n      <h3>\n        메일을 못 받으셨나요?\n        <span onClick={resendSignUpFunction}>&nbsp;메일 재전송</span>\n      </h3>\n    </Grid>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-width: 1200px;\n  /* login */\n  & .login_wrap {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 9999;\n    & .modal {\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n    }\n    & .login {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      max-width: 600px;\n      width: 100%;\n      text-align: center;\n      & .login_inner {\n        padding: 56px 100px;\n        border-radius: 16px;\n        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.4);\n        background: #1a1a1a;\n        & .logo {\n          width: 280px;\n          margin: 0 auto;\n          & img {\n            width: 100%;\n          }\n        }\n        & .sign {\n          padding-top: 60px;\n          & .input_wrap {\n            padding-bottom: 10px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 20px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              background: #484848;\n              border: 2px solid #484848;\n              border-radius: 12px;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & h2 {\n              line-height: 24px;\n              padding-top: 10px;\n              text-align: left;\n              font-weight: 500;\n              color: #f00000;\n            }\n            &.on {\n              border-color: #f00000;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            line-height: 58px;\n            margin-top: 32px;\n            font-size: 20px;\n            color: #fff;\n            background: none;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border-color: #2c5dff;\n            }\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 20px;\n            color: #fff;\n            font-weight: 300;\n            & span {\n              font-weight: 500;\n              cursor: pointer;\n            }\n          }\n        }\n        & .forgot {\n          width: 100%;\n          text-align: left;\n          color: #fff;\n          & h2 {\n            line-height: 48px;\n            font-size: 32px;\n          }\n          & h3 {\n            padding-top: 40px;\n            font-size: 18px;\n          }\n          & .input_wrap {\n            padding-top: 40px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 32px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              border: 2px solid #484848;\n              border-radius: 12px;\n              background: #484848;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & p {\n              padding-top: 10px;\n            }\n            &.input_password {\n              padding: 20px 0 0 0;\n              &:last-child {\n                padding: 10px 0 0 0;\n              }\n            }\n          }\n          & .btn_send {\n            margin-top: 30px;\n            text-align: center;\n            & button {\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              color: #fff;\n              background: none;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            margin-top: 30px;\n            font-size: 16px;\n            color: #fff;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            background: none;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border: 2px solid #2c5dff;\n            }\n          }\n        }\n      }\n    }\n    & p {\n      &.text {\n        padding-top: 20px;\n        font-size: 14px;\n      }\n      &.warning {\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        color: #f00000;\n      }\n      &.forgot {\n        padding-top: 32px;\n        text-align: center !important;\n        font-size: 20px;\n        color: #fff;\n        cursor: pointer;\n      }\n      &.terms {\n        line-height: 24px;\n        padding-top: 40px;\n        font-weight: bold;\n        color: #949494;\n        & span {\n          color: #2c5dff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  /* main */\n  & .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%;\n    padding: 0 60px;\n    height: 100px;\n    & span {\n      cursor: pointer;\n    }\n    & .btn_login {\n      width: 87px;\n      height: 40px;\n      line-height: 42px;\n      text-align: center;\n      font-size: 18px;\n      color: #fff;\n      border-radius: 4px;\n      background: #2c5dff;\n      cursor: pointer;\n    }\n  }\n  & .main {\n    width: 100%;\n    height: 850px;\n    background: url(\"/images/main/main_bg.png\") no-repeat center top;\n    background-size: cover;\n    & .text {\n      text-align: center;\n      color: #fff;\n      & h2 {\n        line-height: 96px;\n        font-size: 72px;\n        font-weight: bold;\n      }\n      & .btn_now {\n        margin-top: 80px;\n        width: 888px;\n        height: 80px;\n        line-height: 80px;\n        background: #2c5dff;\n        font-size: 32px;\n        color: #fff;\n      }\n    }\n  }\n  & .section {\n    width: 100%;\n    background: #1a1a1a;\n    border-bottom: 8px solid #222;\n    & .section_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 540px;\n      margin: auto;\n      & > div {\n        height: 100%;\n        & .text_box {\n          color: #fff;\n          & h2 {\n            line-height: 80px;\n            font-size: 50px;\n            font-weight: 500;\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 28px;\n          }\n        }\n      }\n    }\n  }\n  & .footer {\n    width: 100%;\n    background: #1a1a1a;\n    & .footer_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 560px;\n      margin: 0 auto;\n      & ul {\n        padding-top: 120px;\n        & li {\n          padding-bottom: 20px;\n          color: #828282;\n          &:last-child {\n            padding-bottom: 0;\n          }\n        }\n      }\n      & p {\n        line-height: 22px;\n        padding-top: 160px;\n        color: #828282;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React, { useState, useEffect, useContext } from 'react';\n// import { useHistory } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\nimport Wrapper from './styles';\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n//--------------------------------------------------\n// redux\nimport { Auth, CurrentAuthUiState, AuthType } from '@psyrenpark/auth';\n\n//--------------------------------------------------\n//\n\nexport const ForgotPasswordComponent = props => {\n  const reducer = useSelector(state => state.reducer);\n  const dispatch = useDispatch();\n\n  const [userEmail, setUserEmail] = useState('');\n  const userEmailChange = e => {\n    setUserEmail(e.target.value);\n  };\n\n  const [btnSw, setBtnSw] = useState(false);\n\n  const forgotPasswordFunction = async () => {\n    if (!userEmail) {\n      alert('null');\n    }\n    Auth.forgotPasswordProcess(\n      {\n        email: userEmail,\n        authType: AuthType.EMAIL,\n      },\n      data => {\n        // 성공처리\n        console.log('resendSignUpFunction -> data', data);\n\n        dispatch({\n          type: 'SET_MY_AUTH',\n          payload: {\n            // authType: AuthType.EMAIL,\n            email: userEmail,\n            // password: userPassword,\n          },\n        });\n\n        dispatch({\n          type: 'SET_CURRENT_AUTH_UI_STATE',\n          payload: CurrentAuthUiState.CONFIRM_FORGOT_PASSWORD,\n        });\n      },\n      error => {\n        // 실패처리,\n        console.log('resendSignUpFunction -> error', error);\n        alert(error.message);\n      },\n      isLoading => {\n        // 로딩처리\n        dispatch({ type: 'SET_IS_LOADING', payload: isLoading });\n      },\n    );\n  };\n\n  useEffect(() => {\n    if (userEmail.length > 0) {\n      setBtnSw(true);\n    } else {\n      setBtnSw(false);\n    }\n  }, [userEmail]);\n  return (\n    <>\n      <Grid className=\"forgot\">\n        <h2>비밀번호를 잊으셨나요?</h2>\n        <h3>비밀번호 재설정 인증번호를 보내드리겠습니다.</h3>\n        <Grid className=\"input_wrap\">\n          <input type=\"text\" placeholder=\"이메일 주소\" value={userEmail} onChange={userEmailChange} />\n          {/* <p className=\"warning\">올바르지 않은 이메일 주소 형식입니다.</p> */}\n        </Grid>\n        <button\n          className={btnSw ? 'btn_move on' : 'btn_move'}\n          onClick={() => {\n            if (btnSw) {\n              // setForgotState(\"result_num\");\n              forgotPasswordFunction();\n            }\n          }}\n        >\n          다음\n        </button>\n      </Grid>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-width: 1200px;\n  /* login */\n  & .login_wrap {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 9999;\n    & .modal {\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n    }\n    & .login {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      max-width: 600px;\n      width: 100%;\n      text-align: center;\n      & .login_inner {\n        padding: 56px 100px;\n        border-radius: 16px;\n        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.4);\n        background: #1a1a1a;\n        & .logo {\n          width: 280px;\n          margin: 0 auto;\n          & img {\n            width: 100%;\n          }\n        }\n        & .sign {\n          padding-top: 60px;\n          & .input_wrap {\n            padding-bottom: 10px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 20px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              background: #484848;\n              border: 2px solid #484848;\n              border-radius: 12px;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & h2 {\n              line-height: 24px;\n              padding-top: 10px;\n              text-align: left;\n              font-weight: 500;\n              color: #f00000;\n            }\n            &.on {\n              border-color: #f00000;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            line-height: 58px;\n            margin-top: 32px;\n            font-size: 20px;\n            color: #fff;\n            background: none;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border-color: #2c5dff;\n            }\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 20px;\n            color: #fff;\n            font-weight: 300;\n            & span {\n              font-weight: 500;\n              cursor: pointer;\n            }\n          }\n        }\n        & .forgot {\n          width: 100%;\n          text-align: left;\n          color: #fff;\n          & h2 {\n            line-height: 48px;\n            font-size: 32px;\n          }\n          & h3 {\n            padding-top: 40px;\n            font-size: 18px;\n          }\n          & .input_wrap {\n            padding-top: 40px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 32px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              border: 2px solid #484848;\n              border-radius: 12px;\n              background: #484848;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & p {\n              padding-top: 10px;\n            }\n            &.input_password {\n              padding: 20px 0 0 0;\n              &:last-child {\n                padding: 10px 0 0 0;\n              }\n            }\n          }\n          & .btn_send {\n            margin-top: 30px;\n            text-align: center;\n            & button {\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              color: #fff;\n              background: none;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            margin-top: 30px;\n            font-size: 16px;\n            color: #fff;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            background: none;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border: 2px solid #2c5dff;\n            }\n          }\n        }\n      }\n    }\n    & p {\n      &.text {\n        padding-top: 20px;\n        font-size: 14px;\n      }\n      &.warning {\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        color: #f00000;\n      }\n      &.forgot {\n        padding-top: 32px;\n        text-align: center !important;\n        font-size: 20px;\n        color: #fff;\n        cursor: pointer;\n      }\n      &.terms {\n        line-height: 24px;\n        padding-top: 40px;\n        font-weight: bold;\n        color: #949494;\n        & span {\n          color: #2c5dff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  /* main */\n  & .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%;\n    padding: 0 60px;\n    height: 100px;\n    & span {\n      cursor: pointer;\n    }\n    & .btn_login {\n      width: 87px;\n      height: 40px;\n      line-height: 42px;\n      text-align: center;\n      font-size: 18px;\n      color: #fff;\n      border-radius: 4px;\n      background: #2c5dff;\n      cursor: pointer;\n    }\n  }\n  & .main {\n    width: 100%;\n    height: 850px;\n    background: url(\"/images/main/main_bg.png\") no-repeat center top;\n    background-size: cover;\n    & .text {\n      text-align: center;\n      color: #fff;\n      & h2 {\n        line-height: 96px;\n        font-size: 72px;\n        font-weight: bold;\n      }\n      & .btn_now {\n        margin-top: 80px;\n        width: 888px;\n        height: 80px;\n        line-height: 80px;\n        background: #2c5dff;\n        font-size: 32px;\n        color: #fff;\n      }\n    }\n  }\n  & .section {\n    width: 100%;\n    background: #1a1a1a;\n    border-bottom: 8px solid #222;\n    & .section_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 540px;\n      margin: auto;\n      & > div {\n        height: 100%;\n        & .text_box {\n          color: #fff;\n          & h2 {\n            line-height: 80px;\n            font-size: 50px;\n            font-weight: 500;\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 28px;\n          }\n        }\n      }\n    }\n  }\n  & .footer {\n    width: 100%;\n    background: #1a1a1a;\n    & .footer_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 560px;\n      margin: 0 auto;\n      & ul {\n        padding-top: 120px;\n        & li {\n          padding-bottom: 20px;\n          color: #828282;\n          &:last-child {\n            padding-bottom: 0;\n          }\n        }\n      }\n      & p {\n        line-height: 22px;\n        padding-top: 160px;\n        color: #828282;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React, { useState, useEffect, useContext } from 'react';\n// import { useHistory } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\nimport Wrapper from './styles';\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n//--------------------------------------------------\n// redux\nimport { Auth, CurrentAuthUiState } from '@psyrenpark/auth';\n\n//--------------------------------------------------\n//\n\nexport const ConfirmForgotPasswordComponent = props => {\n  const reducer = useSelector(state => state.reducer);\n  const dispatch = useDispatch();\n\n  const [userCode, setUserCode] = useState('');\n  const userCodeChange = e => {\n    setUserCode(e.target.value);\n  };\n\n  const [userPassword, setUserPassword] = useState('');\n  const userPasswordChange = e => {\n    setUserPassword(e.target.value);\n  };\n\n  const [btnSw, setBtnSw] = useState(false);\n\n  const confirmForgotPasswordFunction = async () => {\n    if (!reducer.myAuth.email) {\n      alert('null');\n    }\n    Auth.confirmForgotPasswordProcess(\n      {\n        email: reducer.myAuth.email,\n        code: userCode,\n        newPassword: userPassword,\n      },\n      data => {\n        // 성공처리\n        console.log('resendSignUpFunction -> data', data);\n\n        dispatch({\n          type: 'SET_MY_AUTH',\n          payload: {\n            authType: null,\n            email: null,\n            password: null,\n          },\n        });\n\n        dispatch({\n          type: 'SET_CURRENT_AUTH_UI_STATE',\n          payload: CurrentAuthUiState.SIGN_IN,\n        });\n      },\n      error => {\n        // 실패처리,\n        console.log('resendSignUpFunction -> error', error);\n        alert(error.message);\n      },\n      isLoading => {\n        // 로딩처리\n        dispatch({ type: 'SET_IS_LOADING', payload: isLoading });\n      },\n    );\n  };\n\n  const resendForgotPasswordFunction = async () => {\n    if (!reducer.myAuth.email) {\n      alert('null');\n    }\n    Auth.resendForgotPasswordProcess(\n      {\n        email: reducer.myAuth.email,\n      },\n      data => {\n        // 성공처리\n        console.log('resendSignUpFunction -> data', data);\n\n        alert('메일이 전송되었습니다.');\n      },\n      error => {\n        // 실패처리,\n        console.log('resendSignUpFunction -> error', error);\n        alert(error.message);\n      },\n      isLoading => {\n        // 로딩처리\n        dispatch({ type: 'SET_IS_LOADING', payload: isLoading });\n      },\n    );\n  };\n\n  useEffect(() => {\n    if (userCode.length > 5 && userPassword.length > 7) {\n      setBtnSw(true);\n    } else {\n      setBtnSw(false);\n    }\n  }, [userCode, userPassword]);\n\n  return (\n    <Grid className=\"forgot\">\n      <h2>{`회원님의 이메일[${reducer.myAuth.email}]로 전송된 인증코드를 입력하세요.`}</h2>\n      <p className=\"text\">비밀번호 재설정 인증번호를 보내드리겠습니다.</p>\n      <Grid className=\"input_wrap\">\n        <input type=\"text\" placeholder=\"6자리 숫자\" value={userCode} onChange={userCodeChange} />\n        {/* <p className=\"warning\">\n                코드가 유효하지 않습니다. 코드를 다시 요청하세요.\n              </p> */}\n      </Grid>\n      <Grid className=\"input_wrap\">\n        <input type=\"text\" placeholder=\"변경할 패스워드\" value={userPassword} onChange={userPasswordChange} />\n        {/* <p className=\"warning\">\n                코드가 유효하지 않습니다. 코드를 다시 요청하세요.\n              </p> */}\n      </Grid>\n      <Grid className=\"btn_send\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            resendForgotPasswordFunction();\n          }}\n        >\n          인증번호 재전송\n        </button>\n      </Grid>\n      <button\n        type=\"button\"\n        className={btnSw ? 'btn_move on' : 'btn_move'}\n        onClick={() => {\n          if (btnSw) {\n            confirmForgotPasswordFunction();\n          }\n        }}\n      >\n        다음\n      </button>\n    </Grid>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-width: 1200px;\n  /* login */\n  & .login_wrap {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 9999;\n    & .modal {\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n    }\n    & .login {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      max-width: 600px;\n      width: 100%;\n      text-align: center;\n      & .login_inner {\n        padding: 56px 100px;\n        border-radius: 16px;\n        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.4);\n        background: #1a1a1a;\n        & .logo {\n          width: 280px;\n          margin: 0 auto;\n          & img {\n            width: 100%;\n          }\n        }\n        & .sign {\n          padding-top: 60px;\n          & .input_wrap {\n            padding-bottom: 10px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 20px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              background: #484848;\n              border: 2px solid #484848;\n              border-radius: 12px;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & h2 {\n              line-height: 24px;\n              padding-top: 10px;\n              text-align: left;\n              font-weight: 500;\n              color: #f00000;\n            }\n            &.on {\n              border-color: #f00000;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            line-height: 58px;\n            margin-top: 32px;\n            font-size: 20px;\n            color: #fff;\n            background: none;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border-color: #2c5dff;\n            }\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 20px;\n            color: #fff;\n            font-weight: 300;\n            & span {\n              font-weight: 500;\n              cursor: pointer;\n            }\n          }\n        }\n        & .forgot {\n          width: 100%;\n          text-align: left;\n          color: #fff;\n          & h2 {\n            line-height: 48px;\n            font-size: 32px;\n          }\n          & h3 {\n            padding-top: 40px;\n            font-size: 18px;\n          }\n          & .input_wrap {\n            padding-top: 40px;\n            & input {\n              width: 100%;\n              height: 60px;\n              line-height: 60px;\n              padding: 0 32px;\n              font-size: 16px;\n              color: rgba(255, 255, 255, 0.5);\n              border: 2px solid #484848;\n              border-radius: 12px;\n              background: #484848;\n              &::placeholder {\n                color: rgba(255, 255, 255, 0.5);\n              }\n            }\n            & p {\n              padding-top: 10px;\n            }\n            &.input_password {\n              padding: 20px 0 0 0;\n              &:last-child {\n                padding: 10px 0 0 0;\n              }\n            }\n          }\n          & .btn_send {\n            margin-top: 30px;\n            text-align: center;\n            & button {\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              color: #fff;\n              background: none;\n            }\n          }\n          & .btn_move {\n            width: 100%;\n            height: 60px;\n            margin-top: 30px;\n            font-size: 16px;\n            color: #fff;\n            border: 2px solid #8d8d8d;\n            border-radius: 12px;\n            background: none;\n            transition: all 0.4s;\n            &.on {\n              color: #fff;\n              background: #2c5dff;\n              border: 2px solid #2c5dff;\n            }\n          }\n        }\n      }\n    }\n    & p {\n      &.text {\n        padding-top: 20px;\n        font-size: 14px;\n      }\n      &.warning {\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        color: #f00000;\n      }\n      &.forgot {\n        padding-top: 32px;\n        text-align: center !important;\n        font-size: 20px;\n        color: #fff;\n        cursor: pointer;\n      }\n      &.terms {\n        line-height: 24px;\n        padding-top: 40px;\n        font-weight: bold;\n        color: #949494;\n        & span {\n          color: #2c5dff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  /* main */\n  & .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%;\n    padding: 0 60px;\n    height: 100px;\n    & span {\n      cursor: pointer;\n    }\n    & .btn_login {\n      width: 87px;\n      height: 40px;\n      line-height: 42px;\n      text-align: center;\n      font-size: 18px;\n      color: #fff;\n      border-radius: 4px;\n      background: #2c5dff;\n      cursor: pointer;\n    }\n  }\n  & .main {\n    width: 100%;\n    height: 850px;\n    background: url(\"/images/main/main_bg.png\") no-repeat center top;\n    background-size: cover;\n    & .text {\n      text-align: center;\n      color: #fff;\n      & h2 {\n        line-height: 96px;\n        font-size: 72px;\n        font-weight: bold;\n      }\n      & .btn_now {\n        margin-top: 80px;\n        width: 888px;\n        height: 80px;\n        line-height: 80px;\n        background: #2c5dff;\n        font-size: 32px;\n        color: #fff;\n      }\n    }\n  }\n  & .section {\n    width: 100%;\n    background: #1a1a1a;\n    border-bottom: 8px solid #222;\n    & .section_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 540px;\n      margin: auto;\n      & > div {\n        height: 100%;\n        & .text_box {\n          color: #fff;\n          & h2 {\n            line-height: 80px;\n            font-size: 50px;\n            font-weight: 500;\n          }\n          & h3 {\n            padding-top: 20px;\n            font-size: 28px;\n          }\n        }\n      }\n    }\n  }\n  & .footer {\n    width: 100%;\n    background: #1a1a1a;\n    & .footer_inner {\n      max-width: 1200px;\n      width: 100%;\n      height: 560px;\n      margin: 0 auto;\n      & ul {\n        padding-top: 120px;\n        & li {\n          padding-bottom: 20px;\n          color: #828282;\n          &:last-child {\n            padding-bottom: 0;\n          }\n        }\n      }\n      & p {\n        line-height: 22px;\n        padding-top: 160px;\n        color: #828282;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React, { useState, useEffect, useContext } from 'react';\n// import { useHistory } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\nimport Wrapper from './styles';\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n//--------------------------------------------------\n// redux\nimport { Auth, CurrentAuthUiState, AuthType } from '@psyrenpark/auth';\n\n//--------------------------------------------------\n//\n\nexport const ChangePasswordComponent = props => {\n  const reducer = useSelector(state => state.reducer);\n  const dispatch = useDispatch();\n\n  const [userOldPassword, setUserOldPassword] = useState('');\n  const userOldPasswordChange = e => {\n    setUserOldPassword(e.target.value);\n  };\n\n  const [userNewPassword, setUserNewPassword] = useState('');\n  const userNewPasswordChange = e => {\n    setUserNewPassword(e.target.value);\n  };\n  const [userConfirmNewPassword, setUserConfirmNewPassword] = useState('');\n  const userConfirmNewPasswordChange = e => {\n    setUserConfirmNewPassword(e.target.value);\n  };\n\n  const [btnSw, setBtnSw] = useState(false);\n\n  const changePasswordFunction = async () => {\n    Auth.changePasswordProcess(\n      {\n        email: reducer.myAuth.userEmail,\n        authType: AuthType.EMAIL,\n        oldPassword: userOldPassword,\n        newPassword: userNewPassword,\n      },\n      data => {\n        // 성공처리\n        console.log('changePasswordFunction -> data', data);\n      },\n      error => {\n        // 실패처리,\n        console.log('changePasswordFunction -> error', error);\n        alert(error.message);\n      },\n      isLoading => {\n        // 로딩처리\n        dispatch({ type: 'SET_IS_LOADING', payload: isLoading });\n      },\n    );\n  };\n\n  useEffect(() => {\n    if (userOldPassword.length > 7 && userNewPassword.length > 7) {\n      setBtnSw(true);\n    } else {\n      setBtnSw(false);\n    }\n  }, [userOldPassword, userNewPassword]);\n  return (\n    <Grid className=\"forgot\">\n      <h2>기존 비빌번호를 입력하세요</h2>\n      <Grid className=\"input_wrap input_password\">\n        <input type=\"password\" placeholder=\"기존 비밀번호\" value={userOldPassword} onChange={userOldPasswordChange} />\n      </Grid>\n      <h2>새로운 비밀번호를 설정하세요.</h2>\n      <Grid className=\"input_wrap input_password\">\n        <input\n          type=\"password\"\n          placeholder=\"새 비밀번호(8자리 이상의 숫자, 알파벳, 특수문자)\"\n          value={userNewPassword}\n          onChange={userNewPasswordChange}\n        />\n      </Grid>\n      {/* <Grid className=\"input_wrap input_password\">\n        <input\n          type=\"password\"\n          placeholder=\"새 비밀번호 확인\"\n          value={userConfirmPassword}\n          onChange={userConfirmPasswordChange}\n        />\n        <p className=\"warning\">\n                새 비밀번호와 비밀번호 확인이 일치하지 않습니다.\n              </p>\n      </Grid> */}\n      <button\n        type=\"button\"\n        className={btnSw ? 'btn_move on' : 'btn_move'}\n        onClick={() => {\n          if (btnSw) {\n            // setLoginState(\"signIn\");\n            changePasswordFunction();\n          }\n        }}\n      >\n        다음\n      </button>\n    </Grid>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\n// import { useHistory } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\nimport Wrapper from \"./styles\";\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//--------------------------------------------------\n//\nimport {\n  Auth,\n  CurrentAuthUiState,\n  AuthType,\n  UserState,\n} from \"@psyrenpark/auth\";\n\nimport { SignInComponent } from \"./SignInComponent\";\nimport { SignUpComponent } from \"./SignUpComponent\";\nimport { ConfirmSignUpComponent } from \"./ConfirmSignUpComponent\";\nimport { ForgotPasswordComponent } from \"./ForgotPasswordComponent\";\nimport { ConfirmForgotPasswordComponent } from \"./ConfirmForgotPasswordComponent\";\nimport { ChangePasswordComponent } from \"./ChangePasswordComponent\";\n\nexport const AuthComponent = (props) => {\n  console.log({ props });\n  const { setLoginSw, backgroundClickHandler } = props;\n\n  const reducer = useSelector((state) => state.reducer);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Grid className=\"login_wrap\">\n        <Grid\n          className=\"modal\"\n          onClick={() => {\n            dispatch({\n              type: \"SET_CURRENT_AUTH_UI_STATE\",\n              payload: CurrentAuthUiState.SIGN_IN,\n            });\n            // setLoginSw(false);\n            if (backgroundClickHandler) {\n              backgroundClickHandler();\n            }\n          }}\n        />\n        <Grid className=\"login\">\n          <Grid className=\"login_inner\">\n            {!(\n              reducer.currentAuthUiState ===\n                CurrentAuthUiState.FORGOT_PASSWORD ||\n              reducer.currentAuthUiState ===\n                CurrentAuthUiState.CONFIRM_FORGOT_PASSWORD\n            ) && (\n              <Grid className=\"logo\">\n                <img src=\"/images/main/main_logo_img.png\" alt=\"\" />\n              </Grid>\n            )}\n            {reducer.currentAuthUiState === CurrentAuthUiState.SIGN_IN && (\n              <SignInComponent />\n            )}\n            {reducer.currentAuthUiState === CurrentAuthUiState.SIGN_UP && (\n              <SignUpComponent />\n            )}\n            {reducer.currentAuthUiState ===\n              CurrentAuthUiState.CONFIRM_SIGN_UP && <ConfirmSignUpComponent />}\n            {reducer.currentAuthUiState ===\n              CurrentAuthUiState.FORGOT_PASSWORD && <ForgotPasswordComponent />}\n            {reducer.currentAuthUiState ===\n              CurrentAuthUiState.CONFIRM_FORGOT_PASSWORD && (\n              <ConfirmForgotPasswordComponent />\n            )}\n            {reducer.currentAuthUiState ===\n              CurrentAuthUiState.CHANGE_PASSWORD && <ChangePasswordComponent />}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Wrapper>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { Grid, Checkbox } from \"@material-ui/core\";\nimport Wrapper from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AuthComponent } from \"../../component/auth\";\n\nconst LoginComponent = () => {\n  const history = useHistory();\n\n  const backgroundClickHandler = (params) => {\n    history.goBack();\n  };\n\n  return (\n    <>\n      <AuthComponent backgroundClickHandler={backgroundClickHandler} />\n    </>\n  );\n};\n\nconst Login = () => {\n  return (\n    <>\n      <LoginComponent />\n    </>\n  );\n};\n\nexport default Login;\n\n{\n  /* <Wrapper>\n<Grid className=\"login_wrap\">\n  <h1 className=\"logo\">\n    <img src=\"/images/car_logo.png\" alt=\"\" />\n  </h1>\n  <Grid className=\"input_wrap id\">\n    <input type=\"text\" placeholder=\"ID\" />\n  </Grid>\n  <Grid className=\"input_wrap password\">\n    <input type=\"text\" placeholder=\"PASSWORD\" />\n  </Grid>\n  <Grid className=\"util\">\n    <span className=\"icon\">\n      <Checkbox />\n    </span>\n    <span className=\"text\">아이디 저장</span>\n  </Grid>\n  <Grid\n    container\n    className=\"btn_login\"\n    onClick={() => {\n      history.push(\"/customer\");\n    }}\n  >\n    <button type=\"button\">로그인</button>\n  </Grid>\n</Grid>\n</Wrapper> */\n}\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\n// import Main from \"./pages/main/\";\n// import Movie from \"./pages/movie\";\n// import Blog_202008_2 from \"./pagses/blog_202008_2\";\n\nimport Blog from \"./pages/blog_20200910\";\nimport Login from \"./pages/login\";\n\n//-------------------------------------------\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//--------------------------------------------------\n// auth\nimport {\n  Auth,\n  CurrentAuthUiState,\n  AuthType,\n  UserState,\n} from \"@psyrenpark/auth\";\n\nconst Routes = () => {\n  const reducer = useSelector((state) => state.reducer);\n  const dispatch = useDispatch();\n\n  const checkAuth = async () => {\n    try {\n      var auth = await Auth.currentSession();\n      console.log(\"checkAuth -> auth\", auth);\n\n      var isAdmin = await Auth.isIncludeGroup(\"admin\");\n\n      console.log(\"checkAuth -> isAdmin\", isAdmin);\n\n      if (isAdmin) {\n        dispatch({\n          type: \"SET_USER_STATE\",\n          payload: UserState.SIGNED,\n        });\n      } else {\n        await Auth.signOut();\n        dispatch({\n          type: \"SET_USER_STATE\",\n          payload: UserState.NOT_SIGN,\n        });\n      }\n    } catch (error) {\n      console.log(\"checkToLogin -> error\", error);\n\n      await Auth.signOut();\n\n      dispatch({\n        type: \"SET_USER_STATE\",\n        payload: UserState.NOT_SIGN,\n      });\n    }\n  };\n\n  useEffect(() => {\n    // 정규식 필요\n    checkAuth();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reducer.userState]);\n\n  return (\n    <div>\n      {reducer.userState === UserState.NOT_SIGN ? (\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" exact component={Blog} />\n            <Route path=\"/blog_20200910\" exact component={Blog} />\n            <Route path=\"/login\" exact component={Login} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      ) : (\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" exact component={Blog} />\n            <Route path=\"/blog_20200910\" exact component={Blog} />\n            <Route path=\"/login\" exact component={Login} />\n            {/* <Route path=\"/movie\" exact component={Movie} />\n            <Route path=\"/terms\" exact component={Terms} /> */}\n\n            <Redirect to=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      )}\n    </div>\n  );\n};\n\nexport default Routes;\n","import { env } from \"./env\";\nimport { CurrentAuthUiState, UserState } from \"@psyrenpark/auth\";\n\nconst INITIAL_STATE = {\n  baseFileServerUrl: env.baseFileServerUrl,\n  isLoading: false, // 로딩 상태\n  currentAuthUiState: CurrentAuthUiState.SIGN_IN, // 인증 화면 상태\n  // currentAuthUiState: CurrentAuthUiState.CHANGE_PASSWORD, // 인증 화면 상태\n  userState: UserState.SIGNED, // 인증 상태\n  myAuth: {}, // 인증관련 정보\n  myUser: {}, // 로그인후 유저 정보\n  drawerOpenFlag: false,\n};\n\nexport default (state = INITIAL_STATE, { type, payload, routeName }) => {\n  switch (type) {\n    case \"SET_IS_LOGIN\":\n      return { ...state, isLogin: payload };\n\n    case \"SET_MY_USER\":\n      return { ...state, myUser: payload };\n\n    case \"SET_DRAWER_OPEN_FLAG\":\n      return { ...state, drawerOpenFlag: payload };\n\n    default:\n      return state;\n  }\n};\n","export var env = {\n  currentAdroidVersion: 2,\n  currentIosVersion: 2,\n  baseFileServerUrl: \"https://file.xydating.app\",\n  // baseFileServerUrl: \"https://xy-dev-file.s3.amazonaws.com\",\n};\n","//----------------------------------------------------\n// redux\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\n\nimport reducer from \"./Reducer\";\n\nconst appReducer = combineReducers({\n  reducer,\n});\n\nexport const store = createStore(appReducer);\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n    \t// prettier-ignore\n    \tconst awsmobile = {\n    \"aws_project_region\": \"ap-northeast-1\",\n    \"aws_cognito_identity_pool_id\": \"ap-northeast-1:357c7031-f41b-4338-8050-e08016dc9558\",\n    \"aws_cognito_region\": \"ap-northeast-1\",\n    \"aws_user_pools_id\": \"ap-northeast-1_tL1TLNNoX\",\n    \"aws_user_pools_web_client_id\": \"3ninqaoue56scegnkrrqvrh9q0\",\n    \"oauth\": {\n        \"domain\": \"kl-dev-auth.auth.ap-northeast-1.amazoncognito.com\",\n        \"scope\": [\n            \"phone\",\n            \"email\",\n            \"openid\",\n            \"profile\",\n            \"aws.cognito.signin.user.admin\"\n        ],\n        \"redirectSignIn\": \"http://localhost/\",\n        \"redirectSignOut\": \"http://localhost/\",\n        \"responseType\": \"code\"\n    },\n    \"federationTarget\": \"COGNITO_USER_POOLS\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"kl-dev-api-v1\",\n            \"endpoint\": \"https://1xy4lbm436.execute-api.ap-northeast-1.amazonaws.com/dev/v1\",\n            \"region\": \"ap-northeast-1\"\n        },\n        {\n            \"name\": \"kl-dev-cdn-v1\",\n            \"endpoint\": \"https://1xy4lbm436.execute-api.ap-northeast-1.amazonaws.com/dev/cdn/v1\",\n            \"region\": \"ap-northeast-1\"\n        }\n    ],\n    \"aws_appsync_graphqlEndpoint\": \"https://q3owfeaepfeodon52sz65mmrlm.appsync-api.ap-northeast-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_user_files_s3_bucket\": \"kl-dev-file\",\n    \"aws_user_files_s3_bucket_region\": \"ap-northeast-1\",\n    \"aws_content_delivery_bucket\": \"kl-dev-cms\",\n    \"aws_content_delivery_bucket_region\": \"ap-northeast-1\",\n    \"aws_content_delivery_url\": \"kl-dev-src\"\n};\n    \texport default awsmobile;\n    \t","import React from \"react\";\nimport Routes from \"./Routes\";\n\n//--------------------------------------------------\n// redux\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport { store } from \"./Redux\";\nimport { Auth } from \"@psyrenpark/auth\";\nimport { Api } from \"@psyrenpark/api\";\nimport { Storage } from \"@psyrenpark/storage\";\nimport awsmobile from \"./aws-exports\";\n\nAuth.setConfigure(awsmobile);\nApi.setConfigure(awsmobile);\nStorage.setConfigure(awsmobile);\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// IE11의 경우\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n// css\n// import \"./css/reset.css\";\n// import \"./css/global.css\";\n// slick\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}